[{"C:\\Users\\mehr0\\Documents\\Dev\\simpleforum\\hwryeol_simpleforum\\src\\index.js":"1","C:\\Users\\mehr0\\Documents\\Dev\\simpleforum\\hwryeol_simpleforum\\src\\App.js":"2","C:\\Users\\mehr0\\Documents\\Dev\\simpleforum\\hwryeol_simpleforum\\src\\Login.js":"3","C:\\Users\\mehr0\\Documents\\Dev\\simpleforum\\hwryeol_simpleforum\\src\\Detail.js":"4","C:\\Users\\mehr0\\Documents\\Dev\\simpleforum\\hwryeol_simpleforum\\src\\Home.js":"5","C:\\Users\\mehr0\\Documents\\Dev\\simpleforum\\hwryeol_simpleforum\\src\\Signup.js":"6","C:\\Users\\mehr0\\Documents\\Dev\\simpleforum\\hwryeol_simpleforum\\src\\Profile.js":"7","C:\\Users\\mehr0\\Documents\\Dev\\simpleforum\\hwryeol_simpleforum\\src\\Header.js":"8","C:\\Users\\mehr0\\Documents\\Dev\\simpleforum\\hwryeol_simpleforum\\src\\PostCreate.js":"9","C:\\Users\\mehr0\\Documents\\Dev\\simpleforum\\hwryeol_simpleforum\\src\\Comments.js":"10"},{"size":228,"mtime":1649558999055,"results":"11","hashOfConfig":"12"},{"size":1780,"mtime":1649558999039,"results":"13","hashOfConfig":"12"},{"size":1787,"mtime":1649600172908,"results":"14","hashOfConfig":"12"},{"size":6152,"mtime":1649581895083,"results":"15","hashOfConfig":"12"},{"size":3968,"mtime":1649558999039,"results":"16","hashOfConfig":"12"},{"size":2530,"mtime":1649558999055,"results":"17","hashOfConfig":"12"},{"size":1473,"mtime":1649558999055,"results":"18","hashOfConfig":"12"},{"size":2028,"mtime":1649558999039,"results":"19","hashOfConfig":"12"},{"size":2572,"mtime":1649581890995,"results":"20","hashOfConfig":"12"},{"size":3293,"mtime":1649558999039,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"q12rk5",{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},"C:\\Users\\mehr0\\Documents\\Dev\\simpleforum\\hwryeol_simpleforum\\src\\index.js",[],[],"C:\\Users\\mehr0\\Documents\\Dev\\simpleforum\\hwryeol_simpleforum\\src\\App.js",["57"],[],"import Login from './Login';\r\nimport Home from './Home';\r\nimport Detail from './Detail';\r\nimport Profile from './Profile';\r\nimport Signup from './Signup';\r\nimport Header from './Header';\r\nimport PostCreate from './PostCreate';\r\nimport {Route,Routes, BrowserRouter} from 'react-router-dom'\r\nimport { useEffect, useState } from \"react\";\r\nimport LoadingIcons from 'react-loading-icons'\r\nimport styles from \"./App.module.css\";\r\n\r\nfunction App(){\r\n  const [isLogined,setIsLogined] = useState(false);\r\n  const [isLoading,setIsLoading] = useState(false);\r\n  const [userData,setUserData] = useState([]);\r\n\r\n  function getUserData(){\r\n    fetch('/profile',{\r\n      method:\"get\",\r\n      headers:{\r\n        withCredentials:true\r\n      }\r\n    }).then( res => {\r\n      if(res.status === 401){\r\n        setIsLogined(false);\r\n      }else{\r\n        res.json().then(list => {\r\n          console.log(list);\r\n          setUserData(list);\r\n          setIsLogined(true); \r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  const props = {isLogined,setIsLogined,isLoading,setIsLoading,userData,setUserData,getUserData}\r\n\r\n  return (\r\n    <div className=\"App\">\r\n       {isLoading&&<div className={styles.loading}><LoadingIcons.SpinningCircles/></div>}\r\n      <BrowserRouter>\r\n      <Header {...props}/>\r\n        <Routes>\r\n          <Route path=\"/\" element={<Home {...props} />}/>\r\n          <Route path=\"/login\" element={<Login {...props}/>} />\r\n          <Route path=\"/forums/:no\" element={<Detail {...props}/>}/>\r\n          <Route path=\"/profile\" element={<Profile {...props}/>} />\r\n          <Route path=\"/signup\" element={<Signup {...props}/>} />\r\n          <Route path=\"/postcreate\" element={<PostCreate {...props}/>} />\r\n        </Routes>\r\n      </BrowserRouter>\r\n    </div>\r\n  );\r\n} \r\n\r\nexport default App;\r\n","C:\\Users\\mehr0\\Documents\\Dev\\simpleforum\\hwryeol_simpleforum\\src\\Login.js",["58","59"],[],"C:\\Users\\mehr0\\Documents\\Dev\\simpleforum\\hwryeol_simpleforum\\src\\Detail.js",["60","61","62","63","64","65"],[],"import { useEffect,useRef,useState } from \"react\";\r\nimport { Navigate } from 'react-router-dom'\r\nimport {useParams} from \"react-router-dom\"\r\nimport styles from \"./Detail.module.css\"\r\nimport Comments from \"./Comments\"\r\nimport LoadingIcons from 'react-loading-icons'\r\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\r\nimport Editor from 'ckeditor5/build/ckeditor';\r\n\r\n\r\nfunction Detail({isLogined, isLoading, setIsLoading,getUserData}) {\r\n    let {no} = useParams();\r\n    let date;\r\n\r\n\r\n    const [forumData,setForumData] = useState([]);\r\n    const [isRedirectHome,setIsRedirectHome] = useState(false);\r\n    const [isRedirectLogin,setIsRedirectLogin] = useState(false);\r\n    const [isUpdate,setIsUpdate] = useState(false);\r\n    const [comments,setComments] = useState([]);\r\n    const [maxseq,setMaxSeq] = useState(0);\r\n    const comment_input = useRef(null);\r\n    const contents_input = useRef(null);\r\n    const [aaa,setaaa]=useState(false);\r\n    const [title,setTitle] = useState(\"\");\r\n    const [contents,setContents] = useState(\"\");\r\n\r\n\r\n    useEffect(()=> {\r\n        setIsLoading(true);\r\n        getForumData();\r\n        getUserData();\r\n    }, []);\r\n\r\n    function getForumData(){\r\n        fetch(`/forums/${no}`).then(res => res.json()).then(data=> {\r\n            setForumData(data[0]);\r\n            setTitle(data[0].title);\r\n            setContents(data[0].contents);\r\n            setIsLoading(false)\r\n            \r\n        }).then();\r\n    }\r\n\r\n    function deleteForum(){\r\n        if(window.confirm(\"게시물을 삭제하겠습니까?\")){\r\n            fetch(`/forums/${no}`,{method:\"DELETE\"}).then((res) => { \r\n                if(res.status === 401){\r\n                    alert(\"로그인이 필요합니다\")\r\n                    setIsRedirectLogin(true);\r\n                }\r\n                if(res.status === 403){\r\n                    alert(\"수정한 권한이 없습니다\");\r\n                    getForumData();\r\n                }\r\n                if(res.status === 200){\r\n                    alert(\"삭제되었습니다.\")\r\n                    setIsRedirectHome(true);\r\n                }\r\n                \r\n            });\r\n\r\n        }\r\n    }\r\n    \r\n    function updateForum(){\r\n        if(window.confirm(\"내용을 변경하겠습니까?\") ){\r\n            fetch(`/forums/${no}`,{\r\n                method:\"PATCH\",\r\n                headers:{\r\n                    \"Content-Type\": \"application/json\"\r\n                  },\r\n                body:JSON.stringify({\r\n                    title:title,\r\n                    // contents:contents_input.current.value\r\n                    contents:contents\r\n                })    \r\n            }).then((res) =>{\r\n                if(res.status === 401){\r\n                    alert(\"로그인이 필요합니다\")\r\n                    setIsRedirectLogin(true);\r\n                }\r\n                if(res.status === 403){\r\n                    alert(\"수정한 권한이 없습니다\");\r\n                    getForumData();\r\n                }\r\n            });\r\n        }\r\n        setIsUpdate(false);\r\n    }\r\n    function getMaxSeq(seq){\r\n        setMaxSeq(seq)\r\n    }\r\n    function createComments(){\r\n        fetch(`/comments/${no}`,{\r\n            method:\"POST\",\r\n            headers:{\r\n                \"Content-Type\": \"application/json\"\r\n              },\r\n            body:JSON.stringify({\r\n                contents:comment_input.current.value,\r\n                seq:maxseq+1,\r\n                lvl:0\r\n            })\r\n        }).then(res=>{\r\n            setaaa(prev=>!prev);\r\n            if(res.status === 401){\r\n                alert(\"로그인이 필요합니다\")\r\n                setIsRedirectLogin(true);\r\n            }\r\n        })\r\n    }\r\n\r\n    return (<>\r\n    {isLoading?<></>:<div className={styles.detail}>\r\n            <input className={styles.title} style={isUpdate?{border:\"1px solid\"}:{}} readOnly={!isUpdate} value={title} onChange={(e)=>{\r\n                setTitle(e.target.value)\r\n            }}/>\r\n            <div className={styles.userData}>\r\n            <div className={styles.userData_nickname}>{forumData.nickname}</div>&nbsp;&nbsp;&nbsp;&nbsp; <div className={styles.userData_createAt}>{forumData.forums_create_at?.replace(/T|Z/g,' ').slice(0,19)}</div></div>\r\n            <div style={{position:\"relative\",marginBottom:\"10px\",top:\"10px\",backgroundColor:\"red\",color:\"#ddd\",borderBottom:\"1px solid\"}}/>\r\n            <div className={isUpdate?\"\":styles.hidden}>\r\n            <CKEditor\r\n                    editor={ Editor }\r\n                    data={contents}\r\n                    onChange={ ( event, editor ) => {\r\n                        const data = editor.getData();\r\n                        setContents(data);\r\n                    }}\r\n                />\r\n            </div>\r\n            <div className={isUpdate?styles.hidden:\"\"} dangerouslySetInnerHTML={{__html:`${contents}`}} />\r\n            <div className={styles.forum_process_menu}>\r\n                <button onClick={()=>setIsUpdate(prev=> !prev)} className={[!isLogined&&styles.hidden, isUpdate?styles.hidden:styles.forum_update].join(\" \")}>수정</button>\r\n                <button onClick={updateForum} className={[!isLogined&&styles.hidden,isUpdate?styles.forum_update:styles.hidden].join(\" \")}>적용</button>\r\n                <button onClick={deleteForum} className={[!isLogined&&styles.hidden, styles.forum_delete].join(\" \")}>제거</button>\r\n            </div>\r\n            <Comments no={no} setIsRedirectLogin={setIsRedirectLogin} getMaxSeq={getMaxSeq} aaa={aaa} isLogined={isLogined} />\r\n            <div className={isLogined?styles.comments_create:styles.hidden}>\r\n                <textarea ref={comment_input} className={styles.comment_create_input} placeholder=\"댓글을 입력하세요. &#13;&#10;shift+enter로 줄바꿈 가능합니다.\"></textarea> \r\n                <button onClick={()=>{\r\n                    createComments()\r\n                }} className={styles.comment_create_button}>등록</button>\r\n            </div>\r\n            {isRedirectHome&&<Navigate to=\"/\"/>}\r\n            {isRedirectLogin&&<Navigate to=\"/login\"/>}\r\n        </div>}\r\n    \r\n    </>\r\n    );\r\n}\r\n  \r\nexport default Detail;\r\n  ","C:\\Users\\mehr0\\Documents\\Dev\\simpleforum\\hwryeol_simpleforum\\src\\Home.js",["66","67","68","69"],[],"import { useEffect, useState } from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport styles from \"./Home.module.css\";\r\nimport {VscChevronLeft,VscChevronRight } from \"react-icons/vsc\";\r\n\r\n\r\nfunction Home({isLogined, isLoding, setIsLoading,getUserData}) {\r\n  const [forumList,setForumList] = useState([]);\r\n  const [userData,setUserData] = useState([]);\r\n  const [forumsCount,setForumsCount] = useState(0);\r\n  const [currentPage,setCurrentPage] = useState(1);\r\n  const [currentPageList,setCurrentPageList] = useState(1);\r\n\r\n  const max_page = Math.ceil(forumsCount/10);\r\n  \r\n\r\n  function getForumList(){\r\n    setIsLoading(true);\r\n    fetch(`/forums/pages/${currentPage}`,{\r\n      method:\"get\",\r\n      headers:{\r\n        withCredentials:true\r\n      }\r\n      \r\n    }).then( res => {\r\n      res.json().then(list => {\r\n        setForumsCount(list[0][0].cnt);\r\n        setForumList(list[1]);\r\n        setIsLoading(false);\r\n      })\r\n    }\r\n      );\r\n      \r\n  }\r\n  useEffect(()=>{\r\n    getForumList();\r\n    getUserData();\r\n  },[currentPage]);\r\n\r\n  const pagenation = () => {\r\n    const result = [];\r\n    const start = currentPageList-1;\r\n    for (let i=(10*start)+1; i<=max_page && i<=10*(start+1); i++){\r\n      result.push(<div className={i===currentPage?styles.selectPage:\"\"} onClick={()=>{\r\n        setCurrentPage(i);\r\n      }}>{i}</div>)\r\n    }\r\n    return result;\r\n  }\r\n\r\n  const upPageList = () =>{\r\n      setCurrentPageList(prev=>prev+1);\r\n  }\r\n  const downPageList = () =>{\r\n    if(currentPageList>1){\r\n      setCurrentPageList(prev=>prev-1);\r\n    }\r\n  }\r\n  \r\n    return (\r\n      <>\r\n     \r\n      <div className={styles.boards}>\r\n        <div className={styles.boards_title}>{`총 게시물 ${forumsCount}건 현재페이지 ${currentPage}/${max_page}`}</div>\r\n        <table className={styles.boards_content_List}>\r\n            <thead className={styles.boards_content_List_header}>\r\n              <tr className={styles.boards_content_List_header_tr}>\r\n                <th className={styles.boards_content_List_header_no}>번호</th>\r\n                <th className={styles.boards_content_List_header_title}>제목</th>\r\n                <th className={styles.boards_content_List_header_writer}>작성자</th>\r\n                <th className={styles.boards_content_List_header_createAt}>날짜</th>\r\n                <th className={styles.boards_content_List_header_viewCount}>조회수</th>\r\n              </tr>\r\n            </thead> \r\n            <tbody className={styles.boards_content_List_body}>\r\n            {\r\n            forumList.map(data=>{\r\n              return (\r\n              <tr className={styles.boards_content_List_body_tr} key={`forum_${data['no']}`}>\r\n                  <td className={styles.boards_content_List_body_tr_no}>{data['no']}</td>\r\n                  <td className={styles.boards_content_List_body_tr_title}>\r\n                  <Link className={styles.boards_content_List_body_tr_title_link} to={`/forums/${data['no']}`}>\r\n                    {data['title']}\r\n                  </Link>\r\n                  </td>\r\n                  <td className={styles.boards_content_List_body_tr_writer}>{data['nickname']}</td>\r\n                  <td className={styles.boards_content_List_body_tr_createAt}>{data['create_at'].slice(0,10)}</td>\r\n                  <td className={styles.boards_content_List_body_tr_viewCount}>{data['view_count']}</td>     \r\n              </tr>\r\n              )\r\n            })}\r\n          </tbody>\r\n          </table>\r\n          <Link className={isLogined?\"\":styles.hidden} to=\"./postcreate\">생성</Link>\r\n          <div className={styles.container}>\r\n            {currentPageList>1?<VscChevronLeft onClick={downPageList} className={styles.left_icon}/>:null}\r\n            {pagenation()}\r\n            {max_page!=0&&(currentPage>max_page || max_page>10) ?<VscChevronRight onClick={upPageList}  className={styles.right_icon}/>:null}\r\n          </div>\r\n      </div>\r\n      </>\r\n    );\r\n  }\r\n  \r\n  export default Home;\r\n  ","C:\\Users\\mehr0\\Documents\\Dev\\simpleforum\\hwryeol_simpleforum\\src\\Signup.js",[],[],"C:\\Users\\mehr0\\Documents\\Dev\\simpleforum\\hwryeol_simpleforum\\src\\Profile.js",[],[],"C:\\Users\\mehr0\\Documents\\Dev\\simpleforum\\hwryeol_simpleforum\\src\\Header.js",["70"],[],"import styles from \"./Header.module.css\";\r\nimport {Link} from \"react-router-dom\";\r\nimport { useEffect, useState, useRef } from \"react\";\r\nimport { CgProfile } from \"react-icons/cg\";\r\n\r\n\r\nfunction Header({isLogined,setIsLogined, isLoading,getUserData,userData,setUserData}){\r\n    const [isBtnClick,setIsBtnClick] = useState(false);\r\n    const el = useRef();\r\n\r\n    function logOut(){\r\n    if(window.confirm(\"로그아웃 하겠습니까?\")){\r\n      fetch('/logout',{\r\n          method:\"POST\",\r\n          headers:{\r\n            withCredentials:true\r\n          }\r\n        }).then( res => {\r\n          setIsLogined(false);\r\n        })\r\n    }\r\n    }\r\n    \r\n  useEffect(()=>{\r\n      getUserData();\r\n  },[])\r\n  \r\n  useEffect(()=>{\r\n    const dropDownMenuHandler = (e) => {\r\n      if(isBtnClick && !el.current.contains(e.target)) setIsBtnClick(false);\r\n    }\r\n    window.addEventListener('click',dropDownMenuHandler);\r\n    return () => window.removeEventListener(\"click\",dropDownMenuHandler);\r\n  },[isBtnClick])\r\n\r\n\r\n    return <><div className={styles.header}>\r\n      <Link className={styles.header_title} to=\"/\">게시판</Link>\r\n      {isLogined?\r\n        <>\r\n        <CgProfile className={styles.userDropMenuBtn} onClick={()=>setIsBtnClick(true)}/>\r\n        <div ref={el} className={[!isBtnClick&&styles.hidden,styles.header_login_links,styles.col].join(\" \")}>\r\n          <div className={styles.message}>{userData.nickname}</div>\r\n          <Link className={`${styles.header_link} ${styles.profile}`} to=\"/profile\">닉네임 변경</Link>\r\n          <button className={styles.logout_btn} onClick={logOut}>로그아웃</button>\r\n                 \r\n        </div>\r\n        </>:<>\r\n        <div className={styles.header_logout_links}>\r\n          <Link className={styles.loginBtn} to=\"/login\">로그인</Link>\r\n          <Link className={styles.signupBtn} to=\"/signup\">회원가입</Link>\r\n        </div>\r\n        </>\r\n        \r\n      }\r\n    </div>\r\n    <div className={styles.header_bar}></div>\r\n    </>\r\n    \r\n}\r\nexport default Header;","C:\\Users\\mehr0\\Documents\\Dev\\simpleforum\\hwryeol_simpleforum\\src\\PostCreate.js",[],[],"C:\\Users\\mehr0\\Documents\\Dev\\simpleforum\\hwryeol_simpleforum\\src\\Comments.js",["71","72","73"],[],"import styles from \"./Comments.module.css\";\r\nimport {Link} from \"react-router-dom\";\r\nimport { useEffect,useRef, useState } from \"react\";\r\n\r\nfunction Comments({no,setIsRedirectLogin,getMaxSeq,aaa,isLogined}){\r\n    const [isReplyList,setIsReplyList] = useState([]);\r\n    const [comments,setComments] = useState([]);\r\n    const reply_inputList = useRef([]);\r\n\r\n    function getComments(){\r\n        fetch(`/comments/${no}`).then(res=>res.json()).then(data=>{\r\n            const commentsData = data;\r\n            commentsData.length>0&&getMaxSeq(commentsData[ commentsData.length-1].seq)\r\n            setComments(data);  \r\n            setIsReplyList(Array.from({length: commentsData.length},()=>false));\r\n            \r\n        })\r\n    }\r\n\r\n    function deleteComments(index){\r\n        if(window.confirm(\"댓글을 삭제하겠습니까?\")){\r\n            fetch(`/comments/${no}`,{\r\n                method:\"DELETE\",\r\n                headers:{\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body:JSON.stringify({\r\n                    id:comments[index].id\r\n                })\r\n            }).then(getComments())\r\n        }\r\n    }\r\n\r\n    function createReply(ref,seq,lvl){\r\n        fetch(`/comments/${no}`,{\r\n            method:\"POST\",\r\n            headers:{\r\n                \"Content-Type\": \"application/json\"\r\n              },\r\n            body:JSON.stringify({\r\n                contents:ref.value,\r\n                seq:seq,\r\n                lvl:lvl\r\n            })\r\n        }).then(res=>{     \r\n            if(res.status === 401){\r\n                alert(\"로그인이 필요합니다\")\r\n                setIsRedirectLogin(true);\r\n            }\r\n            getComments()\r\n        })\r\n        \r\n    }\r\n    useEffect(()=>{\r\n        getComments();\r\n    },[aaa])\r\n\r\n    return <>{comments.map((data,index)=>{\r\n        return <><div key={`commentsList${index}`} className={data.lvl>0?styles.reply:styles.comments} style={{left:`${(data.lvl)*20}px`}}>\r\n                <div className={styles.comments_nickname}>{data.nickname}</div>\r\n                <div className={styles.comments_contents} onClick={()=>{\r\n                    const newReplyList = isReplyList.map((data,idx)=>{\r\n                        if(idx === index){\r\n                            return !data\r\n                        }\r\n                    });\r\n                    setIsReplyList(newReplyList)\r\n                }}>{data.contents}</div>\r\n                <div className={styles.comments_create_at}>{data.create_at.replace(/T|Z/g,' ').slice(5,19)}</div>\r\n                <button className={isLogined?styles.comments_delete_button:styles.hidden} onClick={(event)=>{\r\n                    deleteComments(index);\r\n                }}>X</button>\r\n        </div>\r\n        <div className={isReplyList[index]?[styles.reply_form,styles.col].join(\" \"):[styles.reply_form,styles.hidden].join(\" \")}>\r\n        <textarea placeholder=\"답글을 입력하세요\" ref={el=>reply_inputList.current[index] = el} type=\"text\" className={styles.reply_input}></textarea>\r\n        <button className={styles.reply_input_button} onClick={(event)=>{\r\n            createReply(reply_inputList.current[index],data.seq,data.lvl+1);\r\n        }}>등록</button>\r\n    </div></>\r\n    })}\r\n    </>\r\n}\r\nexport default Comments;",{"ruleId":"74","severity":1,"message":"75","line":9,"column":10,"nodeType":"76","messageId":"77","endLine":9,"endColumn":19},{"ruleId":"74","severity":1,"message":"78","line":5,"column":8,"nodeType":"76","messageId":"77","endLine":5,"endColumn":22},{"ruleId":"79","severity":1,"message":"80","line":14,"column":5,"nodeType":"81","endLine":14,"endColumn":7,"suggestions":"82"},{"ruleId":"74","severity":1,"message":"83","line":6,"column":8,"nodeType":"76","messageId":"77","endLine":6,"endColumn":20},{"ruleId":"74","severity":1,"message":"84","line":13,"column":9,"nodeType":"76","messageId":"77","endLine":13,"endColumn":13},{"ruleId":"74","severity":1,"message":"85","line":20,"column":12,"nodeType":"76","messageId":"77","endLine":20,"endColumn":20},{"ruleId":"74","severity":1,"message":"86","line":20,"column":21,"nodeType":"76","messageId":"77","endLine":20,"endColumn":32},{"ruleId":"74","severity":1,"message":"87","line":23,"column":11,"nodeType":"76","messageId":"77","endLine":23,"endColumn":25},{"ruleId":"79","severity":1,"message":"88","line":33,"column":8,"nodeType":"81","endLine":33,"endColumn":10,"suggestions":"89"},{"ruleId":"74","severity":1,"message":"90","line":9,"column":10,"nodeType":"76","messageId":"77","endLine":9,"endColumn":18},{"ruleId":"74","severity":1,"message":"91","line":9,"column":19,"nodeType":"76","messageId":"77","endLine":9,"endColumn":30},{"ruleId":"79","severity":1,"message":"92","line":38,"column":5,"nodeType":"81","endLine":38,"endColumn":18,"suggestions":"93"},{"ruleId":"94","severity":1,"message":"95","line":98,"column":22,"nodeType":"96","messageId":"97","endLine":98,"endColumn":24},{"ruleId":"79","severity":1,"message":"80","line":26,"column":5,"nodeType":"81","endLine":26,"endColumn":7,"suggestions":"98"},{"ruleId":"74","severity":1,"message":"99","line":2,"column":9,"nodeType":"76","messageId":"77","endLine":2,"endColumn":13},{"ruleId":"79","severity":1,"message":"100","line":56,"column":7,"nodeType":"81","endLine":56,"endColumn":12,"suggestions":"101"},{"ruleId":"102","severity":1,"message":"103","line":62,"column":68,"nodeType":"104","messageId":"105","endLine":62,"endColumn":70},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'googleLoginBtn' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getUserData'. Either include it or remove the dependency array. If 'getUserData' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["106"],"'LoadingIcons' is defined but never used.","'date' is defined but never used.","'comments' is assigned a value but never used.","'setComments' is assigned a value but never used.","'contents_input' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getForumData', 'getUserData', and 'setIsLoading'. Either include them or remove the dependency array. If 'setIsLoading' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["107"],"'userData' is assigned a value but never used.","'setUserData' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getForumList' and 'getUserData'. Either include them or remove the dependency array. If 'getUserData' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["108"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected",["109"],"'Link' is defined but never used.","React Hook useEffect has a missing dependency: 'getComments'. Either include it or remove the dependency array.",["110"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",{"desc":"111","fix":"112"},{"desc":"113","fix":"114"},{"desc":"115","fix":"116"},{"desc":"111","fix":"117"},{"desc":"118","fix":"119"},"Update the dependencies array to be: [getUserData]",{"range":"120","text":"121"},"Update the dependencies array to be: [getForumData, getUserData, setIsLoading]",{"range":"122","text":"123"},"Update the dependencies array to be: [currentPage, getForumList, getUserData]",{"range":"124","text":"125"},{"range":"126","text":"121"},"Update the dependencies array to be: [aaa, getComments]",{"range":"127","text":"128"},[414,416],"[getUserData]",[1151,1153],"[getForumData, getUserData, setIsLoading]",[1028,1041],"[currentPage, getForumList, getUserData]",[678,680],[1754,1759],"[aaa, getComments]"]